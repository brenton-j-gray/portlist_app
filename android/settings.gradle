pluginManagement {
  def reactNativeGradlePlugin = new File(
    providers.exec {
      workingDir(rootDir)
      commandLine("node", "--print", "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })")
    }.standardOutput.asText.get().trim()
  ).getParentFile().absolutePath
  includeBuild(reactNativeGradlePlugin)
  
  def expoPluginsPath = new File(
    providers.exec {
      workingDir(rootDir)
      commandLine("node", "--print", "require.resolve('expo-modules-autolinking/package.json', { paths: [require.resolve('expo/package.json')] })")
    }.standardOutput.asText.get().trim(),
    "../android/expo-gradle-plugin"
  ).absolutePath
  includeBuild(expoPluginsPath)

  // Ensure expo-module-gradle-plugin is available for expo/android/build.gradle
  // First, try the plugin nested under expo's own node_modules
  def expoPath = new File(
    providers.exec {
      workingDir(rootDir)
      commandLine("node", "--print", "require.resolve('expo/package.json')")
    }.standardOutput.asText.get().trim()
  ).getParentFile().absolutePath
  def nestedPluginPath = new File(expoPath, "node_modules/expo-modules-core/expo-module-gradle-plugin").absolutePath
  if (new File(nestedPluginPath).exists()) {
    includeBuild(nestedPluginPath)
  } else {
    // Fallback to top-level expo-modules-core
    def expoModulesCorePath = new File(
      providers.exec {
        workingDir(rootDir)
        commandLine("node", "--print", "require.resolve('expo-modules-core/package.json', { paths: [require.resolve('expo/package.json')] })")
      }.standardOutput.asText.get().trim()
    ).getParentFile().absolutePath
    def expoModuleGradlePluginPath = new File(expoModulesCorePath, "expo-module-gradle-plugin").absolutePath
    includeBuild(expoModuleGradlePluginPath)
  }
}

plugins {
  id("com.facebook.react.settings")
  id("expo-autolinking-settings")
}

extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->
  if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {
    ex.autolinkLibrariesFromCommand()
  } else {
    ex.autolinkLibrariesFromCommand(expoAutolinking.rnConfigCommand)
  }
}
expoAutolinking.useExpoModules()

rootProject.name = 'cruise-journal-pro'

expoAutolinking.useExpoVersionCatalog()

include ':app'
includeBuild(expoAutolinking.reactNativeGradlePlugin)
